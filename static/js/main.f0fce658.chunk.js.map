{"version":3,"sources":["components/RecipeView.js","App.js","reportWebVitals.js","index.js"],"names":["RecipeView","props","className","recipe","label","src","image","Alt","totalDaily","FAT","quantity","toFixed","unit","CHOCDF","CHOLE","FIBTG","MG","VITC","ingredients","length","map","ingredient","text","target","rel","href","url","App","useState","recipes","setRecipes","value","setValue","recipeName","setRecipeName","selected","setSelected","useEffect","fetch","then","response","json","data","hits","catch","handleSubmit","e","preventDefault","AppBar","position","Toolbar","variant","Typography","color","sx","mr","to","exact","path","render","onSubmit","id","onChange","type","name","uri","replace","onClick","Card","width","CardMedia","component","height","CardContent","cuisineType","source","CardActions","Button","size","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0fce658.chunk.js","sourcesContent":["/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport './RecipeView.css';\n\nconst RecipeView = (props) => (\n  <div className=\"recipe_view\">\n    <h1 className=\"title\">{props.recipe.label}</h1>\n    <div className=\"nutrition\">\n      <img src={props.recipe.image} Alt=\"\" />\n      <div>\n        <h2>Nutrition</h2>\n        <li>{`${props.recipe.totalDaily.FAT.label} ${props.recipe.totalDaily.FAT.quantity.toFixed()} ${props.recipe.totalDaily.FAT.unit}`}</li>\n        <li>{`${props.recipe.totalDaily.CHOCDF.label} ${props.recipe.totalDaily.CHOCDF.quantity.toFixed()} ${props.recipe.totalDaily.CHOCDF.unit}`}</li>\n        <li>{`${props.recipe.totalDaily.CHOLE.label} ${props.recipe.totalDaily.CHOLE.quantity.toFixed()} ${props.recipe.totalDaily.CHOLE.unit}`}</li>\n        <li>{`${props.recipe.totalDaily.FIBTG.label} ${props.recipe.totalDaily.FIBTG.quantity.toFixed()} ${props.recipe.totalDaily.FIBTG.unit}`}</li>\n        <li>{`${props.recipe.totalDaily.MG.label} ${props.recipe.totalDaily.MG.quantity.toFixed()} ${props.recipe.totalDaily.MG.unit}`}</li>\n        <li>{`${props.recipe.totalDaily.VITC.label} ${props.recipe.totalDaily.VITC.quantity.toFixed()} ${props.recipe.totalDaily.VITC.unit}`}</li>\n      </div>\n    </div>\n    <div className=\"ingredients\">\n      <h2>{`${props.recipe.ingredients.length} Ingredients`}</h2>\n      {props.recipe.ingredients.map((ingredient) => (\n        <li>{ingredient.text}</li>\n      ))}\n    </div>\n    <div className=\"recipe_button\">\n      <a target=\"_blank\" rel=\"noreferrer\" href={props.recipe.url}>Full Recipe</a>\n    </div>\n  </div>\n);\n\nexport default RecipeView;\n","/* eslint-disable react/jsx-filename-extension */\nimport React, { useState, useEffect } from 'react';\n\nimport Button from '@mui/material/Button';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport CardMedia from '@mui/material/CardMedia';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from 'react-router-dom';\nimport RecipeView from './components/RecipeView';\n\nimport './App.css';\n\nconst App = () => {\n  const [recipes, setRecipes] = useState([]);\n  const [value, setValue] = useState('chicken');\n  const [recipeName, setRecipeName] = useState('chicken');\n  const [selected, setSelected] = useState('');\n\n  useEffect(() => {\n    fetch(`https://api.edamam.com/api/recipes/v2?type=public&q=${value}&app_id=087b9bb4&app_key=10f69d2dd672bf98341ee4ec9af82a6d`)\n      .then((response) => response.json())\n      .then((data) => {\n        setRecipes(data.hits);\n      })\n      .catch('Something went wrong.');\n  }, [value]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setValue(recipeName);\n  };\n\n  return (\n    <Router>\n      <div>\n        <AppBar position=\"static\">\n          <Toolbar variant=\"dense\">\n            <Typography variant=\"h5\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 2 }}>\n              <Link to=\"/recipefy\" className=\"link\">\n                Recipefy\n              </Link>\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Switch>\n          <Route\n            exact\n            path=\"/recipefy\"\n            render={() => (\n              <div>\n                <div className=\"search_form\">\n                  <form onSubmit={handleSubmit}>\n                    <input\n                      id=\"recipeName\"\n                      label=\"Recipe name\"\n                      variant=\"outlined\"\n                      value={recipeName}\n                      onChange={(e) => setRecipeName(e.target.value)}\n                      type=\"text\"\n                      name=\"recipeName\"\n                      className=\"search_bar\"\n                    />\n                    <button type=\"submit\" variant=\"contained\" className=\"search_button\">Submit</button>\n                  </form>\n                </div>\n                <div className=\"recipe_list\">\n                  {recipes.map((recipe) => {\n                    const id = recipe.recipe.uri.replace('http://www.edamam.com/ontologies/edamam.owl#recipe_', '');\n                    return (\n                      <div>\n                        <Link className=\"card_content\" to={`/recipefy/${id}`} onClick={() => setSelected(recipe.recipe)}>\n                          <Card className=\"card\" sx={{ width: 345 }}>\n                            <CardMedia\n                              component=\"img\"\n                              image={recipe.recipe.image}\n                              height=\"300\"\n                            />\n                            <CardContent>\n                              <h2>{recipe.recipe.label}</h2>\n                              <p>\n                                Type:\n                                {recipe.recipe.cuisineType}\n                              </p>\n                              <p>\n                                Ingredients:\n                                {recipe.recipe.ingredients.length}\n                              </p>\n                              <p>\n                                Source:\n                                {recipe.recipe.source}\n                              </p>\n                            </CardContent>\n                            <CardActions>\n                              <Button size=\"small\">Open</Button>\n                            </CardActions>\n                          </Card>\n                        </Link>\n                      </div>\n                    );\n                  })}\n                </div>\n\n              </div>\n            )}\n          />\n          <Route\n            exact\n            path=\"/recipefy/:id\"\n            render={() => (\n              <RecipeView recipe={selected} />\n            )}\n          />\n        </Switch>\n        <div>\n          <div className=\"footer_style\" />\n          <div className=\"style\">\n            <p>Made with &#10084;&#65039; form Austin.</p>\n            <a className=\"footer_link\" href=\"https://www.freepik.com/vectors/food\">Food vector created by bimbimkha - www.freepik.com</a>\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // eslint-disable-next-line react/jsx-filename-extension\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}