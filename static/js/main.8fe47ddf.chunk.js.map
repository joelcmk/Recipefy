{"version":3,"sources":["components/RecipeView.js","App.js","reportWebVitals.js","index.js"],"names":["RecipeView","props","console","log","recipe","totalDaily","className","label","src","image","Alt","FAT","quantity","toFixed","unit","CHOCDF","CHOLE","FIBTG","MG","VITC","ingredients","length","map","ingredient","text","target","href","url","App","useState","recipes","setRecipes","value","setValue","recipeName","setRecipeName","selected","setSelected","useEffect","fetch","then","response","json","data","hits","catch","handleSubmit","e","preventDefault","AppBar","position","Toolbar","variant","Typography","color","sx","mr","to","exact","path","render","onSubmit","id","onChange","type","name","uri","replace","onClick","Card","width","CardMedia","component","height","CardContent","cuisineType","source","CardActions","Button","size","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fe47ddf.chunk.js","sourcesContent":["import React from 'react';\n\nimport './RecipeView.css';\n\nconst RecipeView = (props) => {\n\n  console.log(props.recipe.totalDaily)\n\n  return (\n    <div className=\"recipe_view\">\n      <h1 className=\"title\">{props.recipe.label}</h1>\n      <div className=\"nutrition\">\n        <img src={props.recipe.image} Alt=\"\" />\n        <div>\n          <h2>Nutrition</h2>\n          <li>{props.recipe.totalDaily.FAT.label} {props.recipe.totalDaily.FAT.quantity.toFixed()} {props.recipe.totalDaily.FAT.unit}</li>\n          <li>{props.recipe.totalDaily.CHOCDF.label} {props.recipe.totalDaily.CHOCDF.quantity.toFixed()} {props.recipe.totalDaily.CHOCDF.unit}</li>\n          <li>{props.recipe.totalDaily.CHOLE.label} {props.recipe.totalDaily.CHOLE.quantity.toFixed()} {props.recipe.totalDaily.CHOLE.unit}</li>\n          <li>{props.recipe.totalDaily.FIBTG.label} {props.recipe.totalDaily.FIBTG.quantity.toFixed()} {props.recipe.totalDaily.FIBTG.unit}</li>\n          <li>{props.recipe.totalDaily.MG.label} {props.recipe.totalDaily.MG.quantity.toFixed()} {props.recipe.totalDaily.MG.unit}</li>\n          <li>{props.recipe.totalDaily.VITC.label} {props.recipe.totalDaily.VITC.quantity.toFixed()} {props.recipe.totalDaily.VITC.unit}</li>\n        </div>\n      </div>\n      <div className=\"ingredients\">\n        <h2>{props.recipe.ingredients.length} Ingredients</h2>\n        {props.recipe.ingredients.map(ingredient => {\n          return (\n            <li>{ingredient.text}</li>\n          )\n        })}\n      </div>\n      <div className=\"recipe_button\">\n        <a target=\"_blank\" href={props.recipe.url}>Full Recipe</a>\n      </div>\n    </div>\n  )\n\n\n}\n\nexport default RecipeView;","import React, { useState, useEffect } from 'react';\n\nimport RecipeView from './components/RecipeView';\nimport Button from '@mui/material/Button';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport CardMedia from '@mui/material/CardMedia';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport './App.css';\n\n\nconst App = () => {\n\n  const [recipes, setRecipes] = useState([]);\n  const [value, setValue] = useState('chicken');\n  const [recipeName, setRecipeName] = useState('chicken');\n  const [selected, setSelected] = useState('');\n\n  useEffect(() => {\n    fetch(`https://api.edamam.com/api/recipes/v2?type=public&q=${value}&app_id=087b9bb4&app_key=10f69d2dd672bf98341ee4ec9af82a6d`)\n      .then(response => response.json())\n      .then(data => {\n        setRecipes(data.hits)\n      })\n      .catch('Something went wrong.')\n  }, [value])\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setValue(recipeName)\n  }\n\n  console.log(selected)\n\n  return (\n    <Router>\n      <div>\n        <AppBar position=\"static\">\n          <Toolbar variant=\"dense\">\n            <Typography variant=\"h5\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 2 }}>\n              <Link to=\"/\" className=\"link\">\n                Recipify\n              </Link>\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Switch>\n\n          <Route exact path=\"/\" render={(props) => {\n            return (\n              <div>\n                <div className=\"search_form\">\n                  <form onSubmit={handleSubmit}>\n                    <input id=\"recipeName\" label=\"Recipe name\" variant=\"outlined\"\n                      value={recipeName}\n                      onChange={(e) => setRecipeName(e.target.value)}\n                      type=\"text\"\n                      name=\"recipeName\"\n                      className=\"search_bar\"\n                    />\n                    <button type=\"submit\" variant=\"contained\" className=\"search_button\">Submit</button>\n                  </form>\n                </div>\n                <div className=\"recipe_list\">\n                  {recipes.map(recipe => {\n                    let id = recipe.recipe.uri.replace('http://www.edamam.com/ontologies/edamam.owl#recipe_', '');\n                    return (\n                      <div >\n                        <Link className=\"card_content\" to={`/recipe/${id}`} onClick={(e) => setSelected(recipe.recipe)} >\n                          <Card className=\"card\" sx={{ width: 345 }} >\n                            <CardMedia\n                              component=\"img\"\n                              image={recipe.recipe.image}\n                              height=\"300\"\n                            />\n                            <CardContent>\n                              <h2>{recipe.recipe.label}</h2>\n                              <p>Type: {recipe.recipe.cuisineType}</p>\n                              <p>Ingredients: {recipe.recipe.ingredients.length}</p>\n                              <p>Source: {recipe.recipe.source}</p>\n                            </CardContent>\n                            <CardActions>\n                              <Button size=\"small\">Open</Button>\n                            </CardActions>\n                          </Card>\n                        </Link >\n                      </div>\n                    )\n                  })}\n                </div>\n\n              </div>\n            )\n          }} />\n          <Route exact path=\"/recipe/:id\" render={(props) => {\n            return (\n              <RecipeView recipe={selected} />\n            )\n          }} />\n        </Switch>\n        <div>\n          <div className=\"footer_style\" />\n          <div className=\"style\">\n            <p>Made with &#10084;&#65039; form Austin.</p>\n            <a className=\"footer_link\" href='https://www.freepik.com/vectors/food'>Food vector created by bimbimkha - www.freepik.com</a>\n          </div>\n        </div>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}